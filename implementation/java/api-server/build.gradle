plugins {
  id "org.springframework.boot" version "${springBootVersion}"
  id 'io.spring.dependency-management' version "${springDependecyMgmt}"
  id 'java'
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}


dependencies {
  implementation project(':api-pojos')
  implementation('org.springframework.boot:spring-boot-starter-web')
  implementation('org.springframework.boot:spring-boot-starter-data-jpa')
  // https://vladmihalcea.com/how-to-map-json-objects-using-generic-hibernate-types/
  implementation('com.vladmihalcea:hibernate-types-52:2.9.11')
  // compile('org.springframework.cloud:spring-cloud-starter-aws-jdbc')
  implementation('io.burt:jmespath-jackson:0.2.1')
  implementation('org.modelmapper:modelmapper:2.2.0')
  implementation('javax.json:javax.json-api')
  implementation 'javax.validation:validation-api'
  runtimeOnly('org.postgresql:postgresql')
  annotationProcessor('org.projectlombok:lombok')
  compileOnly('org.projectlombok:lombok')
  testImplementation('org.springframework.boot:spring-boot-starter-test') {
    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
  }
}

javadoc {
  source = sourceSets.main.allJava
//  options.addStringOption "additionalParamName", "additionalParamValue"
}
